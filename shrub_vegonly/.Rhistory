setwd('/media/vijay/Data2/Dropbox/ESA files 2014/data files/')
library(RSQLite)
drv<-dbDriver('SQLite')
install.packages('RSQLite')
drv<-dbDriver('SQLite')
#setwd('D:/Dropbox/ESA files 2014/data files//')
setwd('/media/vijay/Data2/Dropbox/ESA files 2014/data files/')
yrb<-dbConnect(drv,"yrb2011.db")
transects<-dbGetQuery(yrb,"select transectid,LakeID from tblTransects")
lakes<-dbGetQuery(yrb,"select LakeID from tblTransects")
layers<-dbGetQuery(yrb,"select transectid,fib_SH,hum_SH,pf_SH from tblvegtransectmetadata")
layers<-merge(layers,transects)
layers<-merge(layers,lakes)
layers<-layers[layers$FIB_SH>=0,]
layers$Peat_SH=apply(cbind(layers$FIB_SH,layers$HUM_SH),1,max)
layers$Peat_SH[layers$Peat_SH==layers$PF_SH]=NA
layers2<-merge(layers,lake.class)
layers2=layers2[layers2$Category=='Stable',]
SH.min.top.all=mean(na.omit(layers$Peat_SH))
SH.min.top.stable=mean(na.omit(layers2$Peat_SH))
h= SH.min.top.stable
slice.thickness=2
slice.volume = slice.thickness*100*100 #2cm thick 1m2 slice
c.min=0.0025 #gC/cm3 from jobbagy and jackson 2010
#c.min is minimum density
max.depth=380
mean.bd<-tapply(soilmerge$bd.gcm3*(soilmerge$X.C/100),list(soilmerge$Site,soilmerge$Horizon),function(x) mean(na.omit(x)))
mean.SH.layer.center=tapply(soilmerge$layer.width/2,list(soilmerge$Site,soilmerge$Horizon),function(x) mean(na.omit(x)))[2,1]
drv<-dbDriver('SQLite')
#setwd('D:/Dropbox/ESA files 2014/data files//')
setwd('/media/vijay/Data2/Dropbox/ESA files 2014/data files/')
yrb<-dbConnect(drv,"yrb2011.db")
drv<-dbDriver('SQLite')
library(RSQLite)
drv<-dbDriver('SQLite')
#setwd('D:/Dropbox/ESA files 2014/data files//')
setwd('/media/vijay/Data2/Dropbox/ESA files 2014/data files/')
yrb<-dbConnect(drv,"yrb2011.db")
transects<-dbGetQuery(yrb,"select transectid,LakeID from tblTransects")
lakes<-dbGetQuery(yrb,"select LakeID from tblTransects")
layers<-dbGetQuery(yrb,"select transectid,fib_SH,hum_SH,pf_SH from tblvegtransectmetadata")
layers<-merge(layers,transects)
layers<-merge(layers,lakes)
layers<-layers[layers$FIB_SH>=0,]
layers$Peat_SH=apply(cbind(layers$FIB_SH,layers$HUM_SH),1,max)
layers$Peat_SH[layers$Peat_SH==layers$PF_SH]=NA
layers2<-merge(layers,lake.class)
setwd('/media/vijay/Data2/Dropbox/files for usgs pres/richness files/')
lake.class<-read.csv('lake_class.csv')
lake.class$Lake<-gsub('L','',lake.class$Lake)
lake.class$Category[lake.class$Category=='stable']='Stable'
lake.class$Category<-factor(lake.class$Category)
setwd('D:/newsoilstuff/')
marknpp<-read.csv('marknpp_drymass.csv')
yrbcn<-read.csv('YRB NPP lakes CN.csv')
setwd('/media/vijay/Data2/Dropbox/')
marknpp<-read.csv('marknpp_drymass.csv')
yrbcn<-read.csv('YRB NPP lakes CN.csv')
setwd('/media/vijay/Data2/newsoilstuff/ ')
marknpp<-read.csv('marknpp_drymass.csv')
setwd('/media/vijay/Data2/newsoilstuff/')
marknpp<-read.csv('marknpp_drymass.csv')
yrbcn<-read.csv('YRB NPP lakes CN.csv')
marknpp$Horizon=marknpp$horizon
drv<-dbDriver('SQLite')
#setwd('D:/Dropbox/ESA files 2014/data files//')
setwd('/media/vijay/Data2/Dropbox/ESA files 2014/data files/')
yrb<-dbConnect(drv,"yrb2011.db")
transects<-dbGetQuery(yrb,"select transectid,LakeID from tblTransects")
lakes<-dbGetQuery(yrb,"select LakeID from tblTransects")
layers<-dbGetQuery(yrb,"select transectid,fib_SH,hum_SH,pf_SH from tblvegtransectmetadata")
layers<-merge(layers,transects)
layers<-merge(layers,lakes)
layers<-layers[layers$FIB_SH>=0,]
layers$Peat_SH=apply(cbind(layers$FIB_SH,layers$HUM_SH),1,max)
layers$Peat_SH[layers$Peat_SH==layers$PF_SH]=NA
layers2<-merge(layers,lake.class)
layers2=layers2[layers2$Category=='Stable',]
SH.min.top.all=mean(na.omit(layers$Peat_SH))
SH.min.top.stable=mean(na.omit(layers2$Peat_SH))
h= SH.min.top.stable
slice.thickness=2
slice.volume = slice.thickness*100*100 #2cm thick 1m2 slice
c.min=0.0025 #gC/cm3 from jobbagy and jackson 2010
#c.min is minimum density
max.depth=380
mean.bd<-tapply(soilmerge$bd.gcm3*(soilmerge$X.C/100),list(soilmerge$Site,soilmerge$Horizon),function(x) mean(na.omit(x)))
mean.SH.layer.center=tapply(soilmerge$layer.width/2,list(soilmerge$Site,soilmerge$Horizon),function(x) mean(na.omit(x)))[2,1]
a=.1 #0.04856
b=0.0635 #calibrated to match mean min c bd from field data
c.dens.func<-function(h)
{
c.dens<-a*exp(b*h) + c.min
return(c.dens)
}
c.dens.func(-6.375)
soil.prof=seq(0,max.depth,by=2)
soil.prof=soil.prof[soil.prof>h]
soil.prof= -1*(soil.prof-h)
c.dens<-vector(length=length(soil.prof))
c.slices=vector(mode='numeric',length=length(soil.prof))
for(i in 1:length(c.slices))
{
c.dens[i] = c.dens.func(soil.prof[i])
c.slices[i] = c.dens[i]*slice.volume
print(c.slices)
}
min.c.total=sum(c.slices)
min.c.total
cmtbgc=vector(mode='numeric',length=avg.years)
avg.years=10 #will grab last 10 json files in tmp.
cmtbgc=vector(mode='numeric',length=avg.years)
cmtbgc
cmtbgc=list(length=avg.years)
cmtbgc=list(length=avg.years)
for(i in 1:10)
{
cmtbgc[[i]]<-fromJSON(file=last.jsons[i])
}
outdir<-'~/Desktop/pest/' #specify dir where pest-readable output text file will be
setwd(outdir)
targets<-read.csv('TEM_targets.csv') #file with target values
setwd('/tmp/year-cal-dvmdostem/') #assuming json output continues to go here
library(rjson) #may need to install json package
#########################comparing targets to average of last 10 model years to account for stochastic variability
avg.years=10 #will grab last 10 json files in tmp.
jsons=dir(pattern='json')
num.files=length(jsons)
last.jsons=jsons[(num.files-avg.years):num.files]
cmtbgc=list(length=avg.years)
for(i in 1:10)
{
cmtbgc[[i]]<-fromJSON(file=last.jsons[i])
}
carbondeep<-sapply(cmtbgc,function(x) mean(x$CarbonDeep))
carbondeep
carbonshlw<-lapply(cmtbgc,function(x) mean(x$CarbonShallow))
carbonshlw
carbondeep<-mean(sapply(cmtbgc,function(x) (x$CarbonDeep))
carbonshlw<-mean(sapply(cmtbgc,function(x) (x$CarbonShallow))
carbonmin<-mean(sapply(cmtbgc,function(x) (x$CarbonMineralSum))
carbondeep<-mean(sapply(cmtbgc,function(x) (x$CarbonDeep)))
carbonshlw<-mean(sapply(cmtbgc,function(x) (x$CarbonShallow)))
carbondeep<-mean(sapply(cmtbgc,function(x) (x$CarbonDeep)))
carbonshlw<-mean(sapply(cmtbgc,function(x) (x$CarbonShallow)))
carbonmin<-mean(sapply(cmtbgc,function(x) (x$CarbonMineralSum))
organicn<-mean(sapply(cmtbgc,function(x) (x$OrganicNitrogenSum))
availn<-sapply(cmtbgc,function(x) (x$AvailableNitrogenSum)))
carbonmin<-mean(sapply(cmtbgc,function(x) (x$CarbonMineralSum)))
organicn<-mean(sapply(cmtbgc,function(x) (x$OrganicNitrogenSum)))
carbonshlw
carbondeep
carbonmin
availn
availn<-sapply(cmtbgc,function(x) (x$AvailableNitrogenSum)))
availn<-mean(sapply(cmtbgc,function(x) (x$AvailableNitrogenSum)))
availn
#first run = poorly drained drainage type 0
outdir<-'~/Desktop/pest/' #specify dir where pest-readable output text file will be
setwd(outdir)
targets<-read.csv('TEM_targets.csv') #file with target values
setwd('/tmp/year-cal-dvmdostem/') #assuming json output continues to go here
library(rjson) #may need to install json package
#########################will eventually compare targets to average of last 10 model years to account for stochastic variability
avg.years=10 #will grab last 10 json files in tmp.
jsons=dir(pattern='json')
num.files=length(jsons)
last.jsons=jsons[(num.files-avg.years):num.files]
#currently just comparing to last year
i=10
cmtbgc<-fromJSON(file=last.jsons[i])
#soil pools
carbondeep<-cmtbgc$CarbonDeep
carbonshlw<-cmtbgc$CarbonShallow
carbonmin<-cmtbgc$CarbonMineralSum
organicn<-cmtbgc$OrganicNitrogenSum
availn<-cmtbgc$AvailableNitrogenSum
soil.vals<-c(carbondeep,carbonshlw,carbonmin,organicn,availn)
#pftspecific
pft.nums<-3:6
pft.ids<-paste('PFT',pft.nums,sep='')
num.pfts=length(pft.ids)
soil.vars<-c('CarbonDeep','CarbonShallow','CarbonMineralSum','OrganicNitrogenSum','AvailableNitrogenSum')
pft.vars<-c('GPPAll','NPPAll','VEGCL','VEGCW','VEGCR','VEGCSUM','VEGNL','VEGNW','VEGNR','VEGNSUM','VEGLBLN')
pft.vals.mat<-matrix(0,length(pft.vars),num.pfts)
for(j in 1:num.pfts)
{
pft=pft.ids[j]
pft.dat<-cmtbgc[[pft]]
gppall<-pft.dat$GPPAll
nppall<-pft.dat$NPPAll
vegc.l<-pft.dat$VegCarbon$Leaf
vegc.w<-pft.dat$VegCarbon$Stem
vegc.r<-pft.dat$VegCarbon$Root
vegc.sum<-vegc.l+vegc.w+vegc.r
veg.strn.l<-pft.dat$VegStructuralNitrogen$Leaf
veg.strn.w<-pft.dat$VegStructuralNitrogen$Stem
veg.strn.r<-pft.dat$VegStructuralNitrogen$Root
veg.strn.sum<-veg.strn.l+veg.strn.w+veg.strn.r
veg.lbln<-pft.dat$VegLabileNitrogen
pft.vals<-c(gppall,nppall,vegc.l,vegc.w,vegc.r,vegc.sum,veg.strn.l,veg.strn.w,veg.strn.r,veg.strn.sum,veg.lbln)
if(length(dim(pft.vals.mat))>1){
pft.vals.mat[,j]=pft.vals} else {
pft.vals.mat=pft.vals}
}
pft.vals.mat
pft.nums<-0:7
pft.ids<-paste('PFT',pft.nums,sep='')
num.pfts=length(pft.ids)
soil.vars<-c('CarbonDeep','CarbonShallow','CarbonMineralSum','OrganicNitrogenSum','AvailableNitrogenSum')
pft.vars<-c('GPPAll','NPPAll','VEGCL','VEGCW','VEGCR','VEGCSUM','VEGNL','VEGNW','VEGNR','VEGNSUM','VEGLBLN')
pft.vals.mat<-matrix(0,length(pft.vars),num.pfts)
for(j in 1:num.pfts)
{
pft=pft.ids[j]
pft.dat<-cmtbgc[[pft]]
gppall<-pft.dat$GPPAll
nppall<-pft.dat$NPPAll
vegc.l<-pft.dat$VegCarbon$Leaf
vegc.w<-pft.dat$VegCarbon$Stem
vegc.r<-pft.dat$VegCarbon$Root
vegc.sum<-vegc.l+vegc.w+vegc.r
veg.strn.l<-pft.dat$VegStructuralNitrogen$Leaf
veg.strn.w<-pft.dat$VegStructuralNitrogen$Stem
veg.strn.r<-pft.dat$VegStructuralNitrogen$Root
veg.strn.sum<-veg.strn.l+veg.strn.w+veg.strn.r
veg.lbln<-pft.dat$VegLabileNitrogen
pft.vals<-c(gppall,nppall,vegc.l,vegc.w,vegc.r,vegc.sum,veg.strn.l,veg.strn.w,veg.strn.r,veg.strn.sum,veg.lbln)
if(length(dim(pft.vals.mat))>1){
pft.vals.mat[,j]=pft.vals} else {
pft.vals.mat=pft.vals}
}
pft.vals.mat
pft.vars.rep<-rep(pft.vars,num.pfts)
pft.vars
pft.vars.rep
pft.nums<-0:7
pft.ids<-paste('PFT',pft.nums,sep='')
num.pfts=length(pft.ids)
soil.vars<-c('CarbonDeep','CarbonShallow','CarbonMineralSum','OrganicNitrogenSum','AvailableNitrogenSum')
pft.vars<-c('GPPAll','NPPAll','VEGCL','VEGCW','VEGCR','VEGCSUM','VEGNL','VEGNW','VEGNR','VEGNSUM','VEGLBLN')
num.pfts
pft.nums
pft.ids
pft.vars.rep<-rep(pft.vars,num.pfts)
vars<-c(soil.vars,pft.vars.rep)
pft.for.df<-c(rep("",length(soil.vars)),rep(pft.nums,each=length(pft.vars)))
vars.numd=paste(vars,pft.for.df,sep='')
pft.vals.vec<-c(pft.vals.mat)
vals<-c(soil.vals,pft.vals.vec)
obs.vals<-data.frame(Variable=vars.numd,Value=vals)
obs.vals$Target=targets$Value
obs.vals$Err=abs(obs.vals$Value-obs.vals$Target)/obs.vals$Target
obs.vals$x50=ifelse(obs.vals$Err<=.5,"X","")
obs.vals$x30=ifelse(obs.vals$Err<=.3,"X","")
pft.vars.rep<-rep(pft.vars,num.pfts)
vars<-c(soil.vars,pft.vars.rep)
pft.for.df<-c(rep("",length(soil.vars)),rep(pft.nums,each=length(pft.vars)))
vars.numd=paste(vars,pft.for.df,sep='')
vars.numd
pft.vals.vec<-c(pft.vals.mat)
pft.vals.vec
vals<-c(soil.vals,pft.vals.vec)
vals
obs.vals<-data.frame(Variable=vars.numd,Value=vals)
obs.vals$Target=targets$Value
targets
pft.nums<-3:6
pft.ids<-paste('PFT',pft.nums,sep='')
num.pfts=length(pft.ids)
soil.vars<-c('CarbonDeep','CarbonShallow','CarbonMineralSum','OrganicNitrogenSum','AvailableNitrogenSum')
pft.vars<-c('GPPAll','NPPAll','VEGCL','VEGCW','VEGCR','VEGCSUM','VEGNL','VEGNW','VEGNR','VEGNSUM','VEGLBLN')
pft.vals.mat<-matrix(0,length(pft.vars),num.pfts)
for(j in 1:num.pfts)
{
pft=pft.ids[j]
pft.dat<-cmtbgc[[pft]]
gppall<-pft.dat$GPPAll
nppall<-pft.dat$NPPAll
vegc.l<-pft.dat$VegCarbon$Leaf
vegc.w<-pft.dat$VegCarbon$Stem
vegc.r<-pft.dat$VegCarbon$Root
vegc.sum<-vegc.l+vegc.w+vegc.r
veg.strn.l<-pft.dat$VegStructuralNitrogen$Leaf
veg.strn.w<-pft.dat$VegStructuralNitrogen$Stem
veg.strn.r<-pft.dat$VegStructuralNitrogen$Root
veg.strn.sum<-veg.strn.l+veg.strn.w+veg.strn.r
veg.lbln<-pft.dat$VegLabileNitrogen
pft.vals<-c(gppall,nppall,vegc.l,vegc.w,vegc.r,vegc.sum,veg.strn.l,veg.strn.w,veg.strn.r,veg.strn.sum,veg.lbln)
if(length(dim(pft.vals.mat))>1){
pft.vals.mat[,j]=pft.vals} else {
pft.vals.mat=pft.vals}
}
pft.vars.rep<-rep(pft.vars,num.pfts)
vars<-c(soil.vars,pft.vars.rep)
pft.for.df<-c(rep("",length(soil.vars)),rep(pft.nums,each=length(pft.vars)))
vars.numd=paste(vars,pft.for.df,sep='')
pft.vals.vec<-c(pft.vals.mat)
vals<-c(soil.vals,pft.vals.vec)
obs.vals<-data.frame(Variable=vars.numd,Value=vals)
obs.vals$Target=targets$Value
obs.vals$Err=abs(obs.vals$Value-obs.vals$Target)/obs.vals$Target
obs.vals$x50=ifelse(obs.vals$Err<=.5,"X","")
obs.vals$x30=ifelse(obs.vals$Err<=.3,"X","")
setwd(outdir)
write.csv(obs.vals,'TEM_Pest_Output.csv',row.names=FALSE,quote=FALSE)
obs.vals
source('~/Desktop/pest/shrub_vegonly/pest_processing_shrub_vegonly.r')
source('~/Desktop/pest/shrub_vegonly/peat_ins_create_shrub_vegonly.r')
source('~/Desktop/pest/shrub_vegonly/pest_processing_shrub_vegonly.r')
obs.vals
vars<-c('GPPALL','NPPALL','VEGCL','VEGCW','VEGCR','VEGCSUM',
source('~/Desktop/pest/shrub_vegonly/peat_ins_create_shrub_vegonly.r')
